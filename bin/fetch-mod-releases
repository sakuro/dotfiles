#!/bin/bash

shopt -s nullglob

mod_name="$1"

WORKDIR=$(mktemp --tmpdir --directory "${mod_name}.XXXXXX")
trap "rm -rf ${WORKDIR}" EXIT

function empty-current-branch() {
    for file in $(git ls-files); do
        rm "$file"
    done
    find . -depth -mindepth 1 -type d -empty -print0 | xargs -r --null rmdir
}

function prepare-releases-branch() {
    if git show-ref --verify --quiet refs/heads/release; then
        git switch release
    else
        git switch -c release
        empty-current-branch
        git add .
        git commit -m 'Prepare release branch'
    fi

}

# returns download_url, file_name, released_at, sha1, version formated of each mod
# formatted as TSV ordered by released_at ascending
function versions() {
    mod_name="$1"
    curl -s "https://mods.factorio.com/api/mods/${mod_name}" |
    jq -rM '.releases | sort_by(.released_at) [] | [.download_url, .file_name, .released_at, .sha1, .version] | @tsv'
}

function import-release() {
    mod_name="$1"
    version="$2"
    file_name="$3"
    download_url="$4"
    sha1="$5"

    tag="release-${version}"


    git tag --list | grep -qx "$tag" && {
        echo "Tag ${tag} already exists"
        return 1
    }

    [[ -f "${WORKDIR}/${file_name}" ]] || {
        echo "Downloading version ${version}"
        curl -sSL -o "${WORKDIR}/${file_name}" "https://mods.factorio.com${download_url}?username=${SERVICE_USERNAME}&token=${SERVICE_TOKEN}"
    }
    echo "${sha1} ${WORKDIR}/${file_name}" | sha1sum --check --quiet || {
        echo "${file_name} is broken"
        return 1
    }

    unzip -q -d "${WORKDIR}" "${WORKDIR}/${file_name}"
    empty-current-branch
    mv ${WORKDIR}/${mod_name}_${version}/{.[^.]*,*} .
    rmdir ${WORKDIR}/${mod_name}_${version}

    git add .
    git commit -m "Release ${version}"
    git tag "${tag}"
}

prepare-releases-branch

versions "${mod_name}" | while read download_url file_name released_at sha1 version; do
    import-release "${mod_name}" "${version}" "${file_name}" "${download_url}" "${sha1}"
done
