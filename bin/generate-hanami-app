#!/bin/zsh

: ${HANAMI_VERSION:=">= 2.2.0"}
set -eu

clean_work_dir()
{
  [[ -d "${WORK_DIR}" ]] && {
    rm -rf "${WORK_DIR}"
  }
}

APP_NAME="$1"
shift

[[ -d "./$APP_NAME" ]] && {
  echo "Directory $APP_NAME exists"
  exit 1
}

WORK_DIR="$(mktemp -d)"
trap clean_work_dir EXIT HUP INT QUIT KILL TERM
mkdir -vp "${WORK_DIR}"

(
  cd "${WORK_DIR}"
  bundle init
  bundle add hanami --version "${HANAMI_VERSION}"
  bundle
  # other options are: --skip-db, --database=sqlite|mysql|postgres --skip-assets
  bundle exec hanami new "${APP_NAME}" --skip-install "$@"
)

mv "${WORK_DIR}/${APP_NAME}" .

(
  cd "./$APP_NAME"
  git init

  # These gems will require explicit "require"
  # bundle add fiddle logger ostruct

  # irb
  bundle add irb repl_type_completor --group development test

  rm bin/dev Procfile.dev
  cat <<-EOF > mise.toml
	[env]
	_.path = ["bin", "node_modules/.bin"]

	[tasks.default]
	depends = ["dev"]

	[tasks.dev]
	depends = ["web", "assets"]

	[tasks.web]
	run = "bundle exec hanami server"

	[tasks.assets]
	run = "bundle exec hanami assets watch"
EOF
  cat <<-EOF > bin/dev
	#!/bin/sh
	mise run dev
EOF
  chmod +x bin/dev

  # Install gems necesssary for running hanami install
  bundle install
  bundle exec hanami install
  bundle binstub --all

  echo "vendor/bundle/" >> .gitignore
  echo "db/*.sqlite" >> .gitignore

  echo 'Dir["lib/tasks/*.rake"].each { load it }' >> Rakefile

  npm install

  git add .
  git commit -m "Initial commit"

  bundle add rubocop
  bundle binstub rubocop
  install-rubocop-config -d .rubocop capybara i18n performance rake rspec sequel thread_safety
  git add .
  git commit -m "Install rubocop"
)
